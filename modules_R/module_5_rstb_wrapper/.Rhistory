library(shiny)
runGitHub('accuracy_assessment', 'lecrabe')
xmin<- 12.4650473934
ymax<-  3.76303317536
ymin<- -1.27547393365
xmax<- 18.7849526066
(xmin-xmax)/30
(xmin-xmax)*111321/30
(ymin-ymax)*111321/30
xmin+2.5
xmin+2.5+2.5
ymin+2.5
ymin+2.5+2.5
library(shiny)
runApp(launch.browser = T)
list_categories<-levels(as.factor(maparea$map_class))
runApp("../AA_design_windows/",launch.browser = T)
library(shiny)
runApp("../AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
df<-mapareaInput()
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
packages <- function(x){
x <- as.character(match.call()[[2]])
if (!require(x,character.only=TRUE)){
install.packages(pkgs=x,repos="http://cran.r-project.org")
require(x,character.only=TRUE)
}
}
packages(ggplot2)
packages(xtable)
packages(raster)
packages(shiny)
packages(shinydashboard)
packages(dismo)
packages(stringr)
packages(snow)
packages(plyr)
packages(leaflet)
packages(RColorBrewer)
packages(DT)
packages(rgdal)
dir <- "C:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/data/input/"
shp <-readOGR(dsn=paste(dir,"Smallholder_Cacao_geo_multipart.shp",sep=""),layer="Smallholder_Cacao_geo_multipart")
crs(shp)<-CRS("+proj=longlat +datum=WGS84")
legend<-levels(as.factor(shp@data$project))
areas<-sapply(1:length(legend),function(x){gArea(shp[shp@data$class == x,])})
sampling<-data.frame(cbind(legend,1:length(legend),table(shp@data$project)))
names(sampling)<-c("map_class","map_code","nb_poly")
table(shp@data$project)
sampling
for(class_i in legend){
pts<-spsample(shp[shp@data$class == class_i,],100,type="stratified")
assign(paste("pts_",class_i,sep=""),pts)
}
legend
class_i
for(class_i in legend){
pts<-spsample(shp[shp@data$class == class_i,],1,type="stratified")
assign(paste("pts_",class_i,sep=""),pts)
}
spsample
?spsample
polys <- shp[shp@data$class == class_i,]
class_i
polys <- shp[shp@data$class == class_i]
pts<-spsample(polys,1,type="stratified")
assign(paste("pts_",class_i,sep=""),pts)
for(class_i in legend){
polys <- shp[shp@data$class == class_i]
pts<-spsample(polys,1,type="stratified")
assign(paste("pts_",class_i,sep=""),pts)
}
hm<-gUnion(pts_Cacao,`pts_Both Cacao and Palm`)
for(class_i in legend){
polys <- shp[shp@data$class == class_i]
pts<-spsample(polys,23,type="stratified")
assign(paste("pts_",class_i,sep=""),pts)
}
plots(pts)
plot(pts)
pts <- SpatialPoints()
?SpatialPoints()
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,sampling$map_class == legend[i],type="stratified")
pts<-spsample(polys,sampling[sampling$map_class == legend[i],]$nb_poly,type="stratified")
sampling[sampling$map_class == legend[i],]$nb_poly
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
for(i in 2:length(legend)){
polys <- shp[shp@data$class == class_i]
tmp<-spsample(polys,23,type="stratified")
pts <- gUnion(pts,tmp)
}
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
for(i in 2:length(legend)){
polys <- shp[shp@data$class == legend[i]]
tmp<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
pts <- gUnion(pts,tmp)
}
dir <- "C:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/data/input/"
shp <-readOGR(dsn=paste(dir,"Smallholder_Cacao_geo_multipart.shp",sep=""),layer="Smallholder_Cacao_geo_multipart")
crs(shp)<-CRS("+proj=longlat +datum=WGS84")
legend<-levels(as.factor(shp@data$project))
areas<-sapply(1:length(legend),function(x){gArea(shp[shp@data$class == x,])})
sampling<-data.frame(cbind(legend,1:length(legend),table(shp@data$project)))
names(sampling)<-c("map_class","map_code","nb_poly")
table(shp@data$project)
sampling
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
for(i in 2:length(legend)){
polys <- shp[shp@data$class == legend[i]]
tmp<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
pts <- gUnion(pts,tmp)
}
sampling
summary(pts)
names(pts)
plot(pts)
nrow(pts@coords)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
att_vec <- rep(legnd[i],as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
att_vec <- rep(legend[i],as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
att_vec <- rep(legend[i],as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
for(i in 2:length(legend)){
polys <- shp[shp@data$class == legend[i]]
tmp<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
tmp_vec <- rep(legend[i],as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
pts <- gUnion(pts,tmp)
att_vec <- c(att_vec,tmp_vec)
}
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
att_vec <- rep(legend[i],as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
for(i in 2:length(legend)){
polys <- shp[shp@data$class == legend[i]]
tmp<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
tmp_vec <- rep(legend[i],as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
pts <- gUnion(pts,tmp)
att_vec <- append(att_vec,tmp_vec)
}
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
att_vec <- rep(nrow(pts@coords),as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
for(i in 2:length(legend)){
polys <- shp[shp@data$class == legend[i]]
tmp<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
tmp_vec <- rep(nrow(tmp@coords),as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
pts <- gUnion(pts,tmp)
att_vec <- append(att_vec,tmp_vec)
}
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
att_vec <- rep(nrow(pts@coords),as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly))
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
att_vec <- rep(legend[i],nrow(pts@coords))
i=1
polys <- shp[shp@data$class == legend[i]]
pts<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
att_vec <- rep(legend[i],nrow(pts@coords))
for(i in 2:length(legend)){
polys <- shp[shp@data$class == legend[i]]
tmp<-spsample(polys,as.numeric(sampling[sampling$map_class == legend[i],]$nb_poly),type="stratified")
tmp_vec <- rep(legend[i],nrow(tmp@coords))
pts <- gUnion(pts,tmp)
att_vec <- append(att_vec,tmp_vec)
}
sp_df<-SpatialPointsDataFrame(
coords=pts@coords[,c(1,2)],
data=data.frame(att_vec),
proj4string=CRS("+proj=longlat +datum=WGS84"))
sp_df<-SpatialPointsDataFrame(
coords=pts@coords[,c(1,2)],
data=as.data.frame(att_vec),
proj4string=CRS("+proj=longlat +datum=WGS84"))
sp_df<-SpatialPointsDataFrame(
coords=pts@coords[,c(1,2)],
data=as.data.frame(cbind(att_vec,att_vec)),
proj4string=CRS("+proj=longlat +datum=WGS84"))
sp_df<-SpatialPointsDataFrame(
coords=pts@coords[,c(1,2)],
data=as.data.frame(cbind(att_vec,att_vec)),
proj4string=CRS("+proj=longlat +datum=WGS84"),
match.ID=F)
sp_df<-SpatialPointsDataFrame(
coords=pts@coords[,c(1,2)],
data=as.data.frame(att_vec),
proj4string=CRS("+proj=longlat +datum=WGS84"),
match.ID=F)
sp_df<-SpatialPointsDataFrame(
coords=pts@coords[,c(1,2)],
data=as.data.frame(cbind(1:length(att_vec),att_vec)),
proj4string=CRS("+proj=longlat +datum=WGS84"),
match.ID=F)
sp_df <- SpatialPointsDataFrame(
coords=pts@coords[,c(1,2)],
data=data.frame(cbind(1:length(att_vec),att_vec)),
proj4string=CRS("+proj=longlat +datum=WGS84"),
match.ID=F)
data=data.frame(cbind(1:length(att_vec),att_vec))
sp_df <- SpatialPointsDataFrame(
coords=data.frame(pts@coords[,c(1,2)]),
data=data.frame(cbind(1:length(att_vec),att_vec)),
proj4string=CRS("+proj=longlat +datum=WGS84"),
match.ID=F)
plot(sp_df)
hm <- sp_df@data
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
proj4string(sp_df)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_windows/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_raster/",launch.browser = T)
runApp("c:/Users/dannunzio/Documents/countries/congo_brazza/formation_CE/AA_design_raster/",launch.browser = T)
devtools::install_github('rstudio/rsconnect')
find_rtools()
find_rtools()
setwd("R/my_shiny_apps/rstb_wrapper/")
library(shiny)
runApp("C:/Users/dannunzio/Documents/R/my_shiny_apps/rstb_wrapper")
options(stringsAsFactors=FALSE)
########################################
# include all the needed packages here #
packages <- function(x){
x <- as.character(match.call()[[2]])
if (!require(x,character.only=TRUE)){
install.packages(pkgs=x,repos="http://cran.r-project.org")
require(x,character.only=TRUE)
}
}
# packages(ggplot2)
library(RStoolbox)
shiny::runApp()
library(RStoolbox)
library(RStoolbox)
library(RStoolbox)
library(RStoolbox)
library(RStoolbox)
library(shinydashboard)
library(raster)
library(rgdal)
